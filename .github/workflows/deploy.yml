name: Deploy Flutter Web

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      # 1. التحقق من هيكل الملفات (المضافة حديثاً)
      - name: Check project structure
        run: |
          echo "=== Checking project structure ==="
          find . -name "*.dart" | head -20
          echo "=== Looking for main.dart and login_screen.dart ==="
          find . -name "main.dart" -o -name "login_screen.dart" | grep -v ".dart_tool" || echo "Required files not found!"
          echo "=== Project structure check completed ==="

      # 2. إعداد بيئة Flutter
      - name: Setup Flutter SDK
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      # 3. خطوة التخزين المؤقت لحزم الـ Pub
      - name: Cache Pub Dependencies
        uses: actions/cache@v3
        with:
          path: /home/runner/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-pub-

      # 4. الحصول على dependencies
      - name: Get Dependencies
        run: flutter pub get

      # 5. التحقق من صحة المشروع قبل البناء
      - name: Validate Project
        run: |
          echo "=== Running flutter analyze ==="
          flutter analyze || echo "Analysis completed with warnings"
          echo "=== Checking for missing imports ==="
          dart --version

      # 6. تنظيف ملفات البناء
      - name: Clean Build Files
        run: flutter clean

      # 7. بناء تطبيق الويب
      - name: Build Web Release
        run: flutter build web --base-href /DriversApp/ --release

      # 8. النشر على صفحة GitHub
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build/web
          publish_branch: gh-pages
          force_orphan: true